---
layout: post
title: static在java中的用法
tags: java
comment: true
image: /images/logo.jpg
published: true
date: 2016-10-06
---

1. 静态方法 
通常，在一个类中定义一个方法为static，那就是说，无需本类的对象即可调用此方法

   声明为static的方法有以下几条限制： 
· 它们仅能调用其他的static 方法。 
· 它们只能访问static数据。 
· 它们不能以任何方式引用this 或super。

2. 静态变量
声明为static的变量实质上就是全局变量。当声明一个对象时，并不产生static变量的拷贝，而是该类所有的实例变量共用同一个static变量。静态变量与静态方法类似。所有此类实例共享此静态变量，也就是说在类装载时，只分配一块存储空间，所有此类的对象都可以操控此块存储空间，当然对于final则另当别论了

static变量 
　按照是否静态的对类成员变量进行分类可分两种：一种是被static修饰的变量，叫静态变量或类变量；另一种是没有被static修饰的变量，叫实例变量。两者的区别是： 
　对于静态变量在内存中只有一个拷贝（节省内存），JVM只为静态分配一次内存，在加载类的过程中完成静态变量的内存分配，可用类名直接访问（方便），当然也可以通过对象来访问（但是这是不推荐的）。 
　对于实例变量，没创建一个实例，就会为实例变量分配一次内存，实例变量可以在内存中有多个拷贝，互不影响（灵活）。 

static方法 
　静态方法可以直接通过类名调用，任何的实例也都可以调用，因此静态方法中不能用this和super关键字，不能直接访问所属类的实例变量和实例方法 (就是不带static的成员变量和成员成员方法)，只能访问所属类的静态成员变量和成员方法。因为实例成员与特定的对象关联！这个需要去理解，想明白其中的道理，不是记忆！！！ 
　因为static方法独立于任何实例，因此static方法必须被实现，而不能是抽象的abstract。
